'''
2021.02.06
부록 A 코딩테스트를 위한 파이썬 문법
- 자료형 공부
'''

# 정수형 
a=1000
print(a)

a=-7
print(a)

a=0
print(a)

# 실수형
a=157.93
print(a)

a=-1873.7
print(a)

a=5.
print(a) 

a=-7.
print(a) 

# print에 대한 공부
# end 인자를 사용하면 print 함수 마지막 효과를 변경할 수 있다. (기본값을 개행)
print('Hello',end='@@')  
print('Python') 

# sep 인자를 사용하면 콤마로 구분된 문자열을 다르게 결합할 수 있다. (기본값은 공백)
print('Hello',"Python",sep='##')

# 긴 문자열은 \ 기호로 사용하여 여러 줄에 작성 할 수 있다.
# 개행 (줄바꿈), 공백, 특수 기호(이스케이프 문자)를 포함하여 입력한 그대로를 화면에 출력하기 위해서는 ''' ''' 또는 """ """ 기호로 print 내부를 감싸면 된다.
print('''I like Python.\
But I don't like Ruby.''''')

# 10억의 지수 표현 방식. e는 뒤에붙는 0의 개수.
a=1e9
print(a) 

# 752.5
a=75.25e1
print(a) 

# 3.954
a = 3954e-3
print(a) 

# 2진수 쳬계에서는 소수점 값을 비교하기 어렵다.
a=0.3+0.6
print(a) 

if a==0.9:
  print(True) 
else:
  print(False)

# 소숫점 특정 자리수에서 반올림 하는 예시
a=0.3+0.6
print(round(a,4)) # 소수점 5번째 자리에서 반올림

if round(a,4)==0.9:
  print(True)
else:
  print(False)

# 사칙연산. 주의 해야 할 것 : 파이썬에서는 (/)연산자가 기본적으로 결과를 실수형으로 처리한다. 나눈 결과의 몫만 얻고자 할때는 (//)연산자를 이용한다.
# 거듭제곱 연산자 x^y는 x**y이다.
a=7
b=3
print('a/b =',a/b)
print('a%b =',a%b)
print('a//b =',a//b)
print('a**b =',a**b)

# 리스트 자료형
# 파이썬의 리스트 자료형은 C나 자바와 같은 프로그래밍 언어의 배열 기능을 포함하고 있으며, 내부적으로 연결 리스트 자료구조를 채택하고 있어서 append(), remove()등의 메서드를 지원한다. 파이썬의 리스트는 C++의 vector와 유사하며, 리스트 대신에 배열 혹은 테이블 이라고 부르기도 한다.

#리스트 만들기
a = [1,2,3,4,5,6,7,8,9]
print(a)
print(a[4])
a=list()  # 빈 리스트 선언 방법 1
print(a) 
a=[]
print(a)  # 빈 리스트 선언 방법 2

# 크기가 N이고, 모든 값이 0인 1차원 리스트 초기화
n = 10
a = [0]*n
print(a) 

# 리스트의 인덱싱과 슬라이싱
# 인덱스 값을 입력하여 리스트의 특정한 원소에 접근하는 것을 인덱싱 indexing이라고 한다. 파이썬의 인덱스 값은 양의 정수와 음의 정수를 모두 사용할 수 있으며, 음의 정수를 넣으면 원소를 거꾸로 탐색하게 된다.

a=[1,2,3,4,5,6,7,8,9]
print(a[-1])  # 뒤에서 1번째 원소 출력
print(a[-3])  # 뒤에서 3번째 원소 출력
a[3]=7
print(a[3])   # 4번째 원소 값 7로 변경할

# 리스트에서 연속적인 위치를 갖는 원소들을 가져와야 할 때는 슬라이싱 slicing을 이용할 수 있다. 
a=[1,2,3,4,5,6,7,8,9]
# ( a <= x < 4 )두번째 원소부터 네번째 원소까지.
print(a[1:4])

# 리스트 컴프리헨션
# 리스트 컴프리헨션은 리스트를 초기화 하는 방법 중 하나이다. 리스트 컴프리헨션을 이용하면 대괄호 안에 조건문과 반복문을 넣는 방식으로 리스트를 초기화 할 수 있다. 
# 0부터 19까지의 수 중에서 홀수만 포함하는 리스트
array = [i for i in range(20) if i%2 ==1 ]
print(array)

# 위의 코드는 다음과 같다.
array = []
for i in range(20):
  if i%2==1:
    array.append(i)
print(array)

# 1부터 9까지의 수의 제곱 값을 포함하는 리스트
array = [i*i for i in range(1,10)]

# n x m 크기의 2차원 리스트 초기화
# 파이썬 자료구조/ 알고리즘 에서는 반복을 수행하되 반복을 위한 변수의 값을 무시하고자 할 때 언더바(_)를 자주 사용한다. 예를 들어, 단순히 "Hello World"를 5번 출력하는 경우를 들 수 있다.
n=3
m=4
array = [[0]*m for _ in range(n)]
print(array) 

# ------- p423 여기서 잠깐. 까지 공부했음.
# ------- 2차원 리스트를 초기화 할 때는 반드시 리스트 컴프리헨션을 이용해야 한다. 부터 공부시작 해야 함.
